// Generated by CoffeeScript 1.10.0
(function() {
  var MAX, ROTATION, SCALE, UNIQUE_ID, Zouti, audioSelect, errorCallback, gotSources, start, successCallback, up, videoElement, videoSelect;

  SCALE = 1;

  ROTATION = 0;

  UNIQUE_ID = 1;

  MAX = 0;

  videoElement = "";

  audioSelect = "";

  videoSelect = "";

  gotSources = function(sourceInfos) {
    var i, option, results, sourceInfo;
    i = 0;
    results = [];
    while (i !== sourceInfos.length) {
      sourceInfo = sourceInfos[i];
      option = document.createElement('option');
      option.value = sourceInfo.id;
      if (sourceInfo.kind === 'audio') {
        option.text = sourceInfo.label || 'microphone ' + audioSelect.length + 1;
        audioSelect.appendChild(option);
      } else if (sourceInfo.kind === 'video') {
        option.text = sourceInfo.label || 'camera ' + videoSelect.length + 1;
        videoSelect.appendChild(option);
      } else {
        console.log('Some other kind of source: ', sourceInfo);
      }
      results.push(++i);
    }
    return results;
  };

  successCallback = function(stream) {
    window.stream = stream;
    return videoElement.src = window.URL.createObjectURL(stream);
  };

  errorCallback = function(error) {
    return console.log('navigator.getUserMedia error: ', error);
  };

  start = function() {
    var audioSource, constraints, videoSource;
    if (window.stream) {
      videoElement.src = null;
      window.stream.stop();
    }
    audioSource = audioSelect.value;
    videoSource = videoSelect.value;
    constraints = {
      audio: {
        optional: [
          {
            sourceId: audioSource
          }
        ]
      },
      video: {
        optional: [
          {
            sourceId: videoSource
          }
        ]
      }
    };
    return navigator.getUserMedia(constraints, successCallback, errorCallback);
  };

  up = function($element) {
    var id;
    id = $element.attr("id");
    $("#delete").attr("data-id", "" + id);
    $("#delete").show();
    $(".zouti").removeClass("selected").css("z-index: 0;");
    $element.addClass("selected").css("z-index: 1;");
    setTimeout((function() {
      return $("#delete").hide();
    }), 5000);
    $("#slider-s").slider("value", $element.attr("data-scale"));
    $("#scale-info").html("x" + ($element.attr('data-scale')));
    $("#slider-r").slider("value", $element.attr("data-rotation"));
    return $("#rotation-info").html(($element.attr('data-rotation')) + "°");
  };

  Zouti = (function() {
    function Zouti(zouti1) {
      var html, x;
      this.zouti = zouti1;
      if (!$("#Zouti").length) {
        $("#cam").after("<div id='Zouti'></div>");
      }
      this.id = UNIQUE_ID++;
      this.layer = MAX++;
      html = "<div id='" + this.id + "' class='zouti " + this.zouti + "' data-zouti='" + this.zouti + "' data-scale='1' data-rotation='0'></div>";
      $(".zouti").removeClass("selected");
      $("#Zouti").append("<div id='" + this.id + "' class='zouti " + this.zouti + "' data-zouti='" + this.zouti + "' data-scale='1' data-rotation='0'></div>");
      if (this.zouti === "pied-a-coulisse") {
        $("#" + this.id).append("<div class='zouti coulisse' data-zouti='coulisse' data-scale='1' data-rotation='0'></div>");
        $("#" + this.id + " .coulisse").draggable({
          axis: "x",
          containment: "parent"
        });
      }
      x = $("#" + this.id).offset();
      $("#" + this.id).draggable({
        start: function(event, ui) {
          return up($(this));
        }
      }).addClass("selected").css({
        top: -x.top,
        left: -x.left
      });
      $("#delete").attr("data-id", "" + this.id);
    }

    return Zouti;

  })();

  $(function() {
    var j, len, ref, zouti;
    $("#cam, .local").toggle();
    $("#menu-div, #delete").hide();
    $("#menu-div, #menu").draggable();
    $("#menu, #menu-close").on("click", function() {
      return $("#menu-div").toggle();
    });
    $("#source-toggle").on("click", function() {
      return $(".web, .local, #cam, #web-iframe").toggle();
    });
    $("#web-go").on("click", function() {
      return $("#web-iframe").attr("src", $("#web-url").val());
    });
    videoElement = $('video')[0];
    audioSelect = $('select#audioSource')[0];
    videoSelect = $('select#videoSource')[0];
    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
    if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {
      alert('This browser does not support MediaStreamTrack.\n\nTry Chrome.');
    } else {
      MediaStreamTrack.getSources(gotSources);
    }
    $(audioSelect).on("change", function() {
      return start();
    });
    $(videoSelect).on("change", function() {
      return start();
    });
    ref = ["equerre", "regle", "rapporteur-180", "rapporteur-360", "grille", "couleurs", "pied-a-coulisse"];
    for (j = 0, len = ref.length; j < len; j++) {
      zouti = ref[j];
      $("#menu-div").append("<button id='create-" + zouti + "' data-zouti='" + zouti + "'>" + zouti + "</button>");
      $("#create-" + zouti).on("click", function() {
        return new Zouti($(this).attr("data-zouti"));
      });
    }
    $("body").on("click", ".zouti", function() {
      return up($(this));
    });
    $("body").on("click", "#delete", function() {
      $("#" + ($(this).attr('data-id'))).remove();
      return $(this).hide();
    });
    $("#slider-s").slider({
      value: SCALE,
      min: 0,
      max: 4,
      step: 0.01,
      slide: function(event, ui) {
        SCALE = ui.value;
        $("#scale-info").html("x" + SCALE);
        return $('.selected').css('transform', "rotate(" + ($('.selected').attr('data-rotation')) + "deg) scale(" + SCALE + ")").attr("data-scale", "" + SCALE);
      }
    });
    return $("#slider-r").slider({
      value: ROTATION,
      orientation: "vertical",
      min: -180,
      max: 180,
      step: 1,
      slide: function(event, ui) {
        ROTATION = ui.value;
        $("#rotation-info").html(ROTATION + "°");
        return $('.selected').css('transform', "rotate(" + ROTATION + "deg) scale(" + ($('.selected').attr('data-scale')) + ")").attr("data-rotation", "" + ROTATION);
      }
    });
  });

}).call(this);
